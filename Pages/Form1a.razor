@page "/Form1a"
@using BlazorEditFormExamples.Model
<h3>Simple Form - Enable Submit when Valid</h3>

<EditForm @ref="Form" Model="Model" OnValidSubmit="Save" OnInvalidSubmit="() => Json = string.Empty" class="">
    <DataAnnotationsValidator />

    <div class="form-floating">
        <InputText id="FirstName" @bind-Value="Model.FirstName" class="form-control" placeholder="First Name" />
        <label for="FirstName">First Name</label>
    </div>
    <div class="form-floating">
        <InputText id="LastName" @bind-Value="Model.LastName" class="form-control" placeholder="Last Name" />
        <label for="LastName">Last Name</label>
    </div>
    <div class="form-floating">
        <InputText id="Phone" @bind-Value="Model.Phone" class="form-control" placeholder="Phone" />
        <label for="Phone">Phone</label>
    </div>
    <div class="form-floating">
        <InputText id="Email" @bind-Value="Model.Email" class="form-control" placeholder="Email" />
        <label for="Email">Email</label>
    </div>
    <button type="submit" class="btn btn-primary" disabled="@IsSubmitDisabled">Submit</button>
</EditForm>
<div class="mt-5">
<pre>
        @Json
</pre>
</div>

@code {
    public Person Model { get; set; } = new();

    public string Json { get; set; } = string.Empty;

    public void Save()
    {
        Json = Newtonsoft.Json.JsonConvert.SerializeObject(Model, Newtonsoft.Json.Formatting.Indented);
    }

    private bool IsSubmitDisabled { get; set; } = true;

    private EditForm? Form { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            if (Form?.EditContext != null)
            {
                Form.EditContext.OnFieldChanged += (sender, eventArgs) =>
                {
                    IsSubmitDisabled = !Form.EditContext.Validate();
                };
            }
        }
    }
}